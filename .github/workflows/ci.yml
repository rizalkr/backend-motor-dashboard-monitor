name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: vehicle_maintenance_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create test environment file
      run: |
        echo "DB_HOST=localhost" > .env
        echo "DB_PORT=5432" >> .env
        echo "DB_NAME=vehicle_maintenance_test" >> .env
        echo "DB_USER=test_user" >> .env
        echo "DB_PASSWORD=test_password" >> .env
        echo "JWT_SECRET=test_jwt_secret_for_ci_only" >> .env
        echo "PORT=3001" >> .env
        echo "NODE_ENV=test" >> .env

    - name: Set up database schema
      run: |
        PGPASSWORD=test_password psql -h localhost -U test_user -d vehicle_maintenance_test -f database_schema.sql

    - name: Test database connection
      run: npm run test-db

    - name: Check database status
      run: npm run check-db

    - name: Start server in background
      run: |
        npm start &
        sleep 5

    - name: Test API health endpoint
      run: |
        curl -f http://localhost:3001/health || exit 1

    - name: Run tests (when available)
      run: npm test || echo "No tests specified yet"

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check for security vulnerabilities
      run: npm audit --audit-level moderate

    - name: Check code formatting (when available)
      run: echo "Code formatting check placeholder"
